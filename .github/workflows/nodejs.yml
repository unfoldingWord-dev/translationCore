name: Node CI

on:
  pull_request:
    branches:
      - master
      - develop
      - release-*

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    container: neutrinog/concourse-tasks:latest
    env:
      CI: true

    steps:
    - name: Checkout codebase
      uses: actions/checkout@v1
      with:
        submodules: recursive

    - name: npm install
      run: npm ci

    - name: npm test
      run: npm run ci-test

    - name: upload coverage
      run: ./node_modules/.bin/codecov

    - name: npm lint
      run: npm run lint

  build-linux:
    name: Build Linux
#    needs: test
    runs-on: ubuntu-latest
    container: neutrinog/concourse-tasks:latest
    env:
      TC_HELP_DESK_TOKEN: ${{ secrets.TC_HELP_DESK_TOKEN }}
      TC_HELP_DESK_EMAIL: ${{ secrets.TC_HELP_DESK_EMAIL }}
      APP_NAME: translationCore
      CI: true

    steps:
      - name: Checkout codebase
        uses: actions/checkout@v1
        with:
          submodules: recursive

      - name: Read version and commit sha
        run: |
          echo "::set-env name=HASH::$(echo $GITHUB_SHA | cut -c1-7)"
          echo "::set-env name=APP_VERSION::$(node -p -e "require('./package.json').version")"

      - name: Set artifact name
        run: echo "::set-env name=ARTIFACT_NAME::$($APP_NAME-linux-x64-$APP_VERSION-$HASH.deb)"

      - name: Bundle environment variables
        run: |
          echo "TC_HELP_DESK_TOKEN=$TC_HELP_DESK_TOKEN" >> .env
          echo "TC_HELP_DESK_EMAIL=$TC_HELP_DESK_EMAIL" >> .env
          echo "BUILD=$HASH" >> .env

      - name: npm install
        run: npm ci

      - name: Download latest language names
        run: curl https://td.unfoldingword.org/exports/langnames.json > src/assets/langnames.json

      - name: Update resources
        run: npm run update-resources

      #    - name: bundle windows
      #      run: npm run bundle:windows --if-present
      #
      #    - name: bundle macos
      #        run: npm run bundle:macos --if-present
      - name: build linux
        id: build
        run: |
          echo "Building $APP_VERSION-$HASH"
          ./node_modules/.bin/gulp build --linux
          ./node_modules/.bin/gulp release-linux-deb --out=./release/$ARTIFACT_NAME
          echo "::set-output name=file::$(./release/$ARTIFACT_NAME)"

      - uses: actions/upload-artifact@v1
        name: Upload artifacts
        with:
          name: ${{ $ARTIFACT_NAME }}
          path: ${{ steps.build.outputs.file }}

  build-windows:
    name: Build Windows
    needs: test
    runs-on: ubuntu-latest
    container: neutrinog/concourse-tasks:latest
    env:
      TC_HELP_DESK_TOKEN: ${{ secrets.TC_HELP_DESK_TOKEN }}
      TC_HELP_DESK_EMAIL: ${{ secrets.TC_HELP_DESK_EMAIL }}
      APP_NAME: translationCore
      CI: true

    steps:
      - name: Checkout codebase
        uses: actions/checkout@v1
        with:
          submodules: recursive

      - name: Read version and commit sha
        run: |
          echo "::set-env name=HASH::$(echo $GITHUB_SHA | cut -c1-7)"
          echo "::set-env name=APP_VERSION::$(node -p -e "require('./package.json').version")"

      - name: Bundle environment variables
        run: |
          echo "TC_HELP_DESK_TOKEN=$TC_HELP_DESK_TOKEN" >> .env
          echo "TC_HELP_DESK_EMAIL=$TC_HELP_DESK_EMAIL" >> .env
          echo "BUILD=$HASH" >> .env

      - name: npm install
        run: npm ci

      - name: Download latest language names
        run: curl https://td.unfoldingword.org/exports/langnames.json > src/assets/langnames.json

      - name: Update resources
        run: npm run update-resources

      #    - name: bundle windows
      #      run: npm run bundle:windows --if-present
      #
      #    - name: bundle macos
      #        run: npm run bundle:macos --if-present

      - name: build windows
        run: |
          echo "Building $APP_VERSION-$HASH"
          ./node_modules/.bin/gulp build --win

      - name: bundle x64 windows
        run: ./node_modules/.bin/gulp release-win64 --out=./release/$APP_NAME-win-x64-$APP_VERSION-$HASH.setup.exe

      - name: bundle x32 windows
        run: ./node_modules/.bin/gulp release-win32 --out=./build/$APP_NAME-win-x32-$APP_VERSION-$HASH.setup.exe

  build-macos:
    name: Build macOS
    needs: test
    runs-on: macos-latest
    env:
      TC_HELP_DESK_TOKEN: ${{ secrets.TC_HELP_DESK_TOKEN }}
      TC_HELP_DESK_EMAIL: ${{ secrets.TC_HELP_DESK_EMAIL }}
      APP_NAME: translationCore
      CI: true

    steps:
      - name: Checkout codebase
        uses: actions/checkout@v1
        with:
          submodules: recursive

      - name: Read version and commit sha
        run: |
          echo "::set-env name=HASH::$(echo $GITHUB_SHA | cut -c1-7)"
          echo "::set-env name=APP_VERSION::$(node -p -e "require('./package.json').version")"

      - name: Set artifact name
        run: echo "::set-env name=ARTIFACT_NAME::$($APP_NAME-macos-x64-$APP_VERSION-$HASH.dmg)"

      - name: Bundle environment variables
        run: |
          echo "TC_HELP_DESK_TOKEN=$TC_HELP_DESK_TOKEN" >> .env
          echo "TC_HELP_DESK_EMAIL=$TC_HELP_DESK_EMAIL" >> .env
          echo "BUILD=$HASH" >> .env

      - name: npm install
        run: npm ci

      - name: Download latest language names
        run: curl https://td.unfoldingword.org/exports/langnames.json > src/assets/langnames.json

      - name: Update resources
        run: npm run update-resources

      - name: build macOS
        id: build
        run: |
          echo "Building $APP_VERSION-$HASH"
          ./node_modules/.bin/gulp build --macos
          ./node_modules/.bin/gulp release-macos --out=./release/$ARTIFACT_NAME
          echo "::set-output name=file::$(./release/$ARTIFACT_NAME)"

      - uses: actions/upload-artifact@v1
        name: Upload artifacts
        with:
          name: ${{ $ARTIFACT_NAME }}
          path: ${{ steps.build.outputs.file }}
