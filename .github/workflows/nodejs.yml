name: Node CI

on:
  pull_request:
    branches:
      - master
      - develop
      - release-*

jobs:
  test:
    runs-on: ubuntu-latest
    container: neutrinog/concourse-tasks:latest
    env:
      CI: true

    steps:
    - name: Checkout codebase
      uses: actions/checkout@v1
      with:
        submodules: recursive

    - name: npm install
      run: npm ci

    - name: npm test
      run: npm test

  build-linux:
    name: Build Linux
    needs: test
    runs-on: ubuntu-latest
    container: neutrinog/concourse-tasks:latest
    env:
      TC_HELP_DESK_TOKEN: ${{ secrets.TC_HELP_DESK_TOKEN }}
      TC_HELP_DESK_EMAIL: ${{ secrets.TC_HELP_DESK_EMAIL }}
      APP_NAME: translationCore
      CI: true

    steps:
      - name: Checkout codebase
        uses: actions/checkout@v1
        with:
          submodules: recursive

      - name: Read version and commit sha
        run: |
          echo "::set-env name=HASH::$(echo $GITHUB_SHA | cut -c1-7)"
          echo "::set-env name=APP_VERSION::$(node -p -e "require('./package.json').version")"

      - name: Bundle environment variables
        run: |
          echo "TC_HELP_DESK_TOKEN=$TC_HELP_DESK_TOKEN" >> .env
          echo "TC_HELP_DESK_EMAIL=$TC_HELP_DESK_EMAIL" >> .env
          echo "BUILD=$HASH" >> .env

      - name: npm install
        run: npm ci

      - name: Download latest language names
        run: curl https://td.unfoldingword.org/exports/langnames.json > src/assets/langnames.json

      - name: Update resources
        run: npm run update-resources

      #    - name: bundle windows
      #      run: npm run bundle:windows --if-present
      #
      #    - name: bundle macos
      #        run: npm run bundle:macos --if-present

      - name: build linux
        run: |
          echo "Building $APP_VERSION-$HASH"
          ./node_modules/.bin/gulp build --linux
          ./node_modules/.bin/gulp release-linux-deb --out=./release/$APP_NAME-linux-x64-$APP_VERSION-$HASH.deb
